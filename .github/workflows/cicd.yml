name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Create application-prod.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.PROD_CONFIG }}" >> ./application-prod.yml

      - name: Add init.sql
        run: |
          echo "${{ secrets.INIT_SQL }}" >> ./init.sql

      - name: Import FCM credentials
        run: |
          cd ./src/main/resources
          mkdir firebase
          echo '${{ secrets.FCM_CREDENTIALS }}' >> ./firebase/credentials.json

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build app image and push to DockerHub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/catch-dining-app .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/catch-dining-app

      - name: Access to EC2 and activate containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PEM }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/catch-dining-app
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
            DB_URL=${{ secrets.DB_URL }} \
            DB_USERNAME=${{ secrets.DB_USERNAME }} \
            DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }} \
            docker-compose up -d
            docker image prune -f