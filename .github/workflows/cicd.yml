name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql version: '8.0.32'
          mysql database: 'catch_dining'
          mysql root password: ${{ secrets.DB_PASSWORD }}
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}

      - name: Set up Redis
        uses: zhulik/redis-action@1.1.0
        with:
          redis version: '7.0.14'
          number of databases: 1

      - name: Complete properties files
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APP_CONFIG }}" >> ./application.properties
          
          cd ../../../src/test/resources
          echo "${{ secrets.TEST_CONFIG }}" >> ./application.properties

      - name: Import FCM credentials
        run: |
          cd ./src/main/resources
          mkdir firebase
          echo "${{ secrets.FCM_CREDENTIALS }}" >> ./firebase/credentials.json

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build app image and push to DockerHub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/catch-dining-app .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/catch-dining-app

      - name: Access to EC2 and activate containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PEM }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/catch-dining-app
            docker-compose up -d
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
