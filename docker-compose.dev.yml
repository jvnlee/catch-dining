services:
  app:
    container_name: catch-dining-app
    build: .
    ports:
      - "80:8080"
    depends_on:
      write-db:
        condition: service_healthy
      read-db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - catch-dining-net

  write-db:
    container_name: write-db
    image: mysql:8.0.32
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - ./write-db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=catch_dining
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catch-dining-net

  read-db:
    container_name: read-db
    image: mysql:8.0.32
    ports:
      - "3307:3306"
    restart: always
    volumes:
      - ./read-db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=catch_dining
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catch-dining-net

  redis:
    container_name: redis
    image: redis:7.0.14
    ports:
      - "6379:6379"
    restart: always
    networks:
      - catch-dining-net

networks:
  catch-dining-net:
    driver: bridge